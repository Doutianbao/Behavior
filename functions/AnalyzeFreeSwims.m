function varargout = AnalyzeFreeSwims(varargin)
%AnalyzeFreeSwims Given procData.mat generated by SlowSwim, returns some
%   useful info after analyzing swims
% out = AnalyzeFreeSwims();
% out = AnalyzeFreeSwims(procData,'fps',fps,'nFramesInTrl',nFramesInTrl);
%
% Avinash Pujala, Koyama lab/HHMI, 2016

fps = 500;
nFramesInTrl = 750;
preStimPeriod = 0.1;

if nargin ==0
    cd('S:\Avinash\Ablations and behavior\Intermediate RS')
    [fileName,pathName] = uigetfile('*.mat');
    procData = matfile(fullfile(pathName,fileName));
elseif nargin ==1
    procData = varargin{1};
    if isfield(procData,'fps')
        fps = procData.fps;
    end
    if isfield(procData,'nFramesInTrl')
        nFramesInTrl = procData.nFramesInTrl;
    end
else
    for jj = 1:numel(varargin)
        if ischar(varargin{jj})
            switch lower(varargin{jj})
                case 'fps'
                    fps = varargin{jj+1};
                case lower('nFramesInTrl')
                    nFramesInTrl = varargin{jj+1};
                case lower('preStimPeriod')
                    preStimPeriod = varargin{jj+1};
            end
        end
    end
end

disp('Reading data from procData...')
tic
disp('Tail curvature...')
tailCurv = procData.tailCurv;

toc
try
    imgDims = procData.imgDims_crop;
catch
    disp('Extracting image dimensions...')
    imgDims = size(procData.IM_proc_crop);
end

imgDims = imgDims(1:2);
disp('Calculating tail angles...')
tAngles = GetTailTangents(tailCurv);
toc
time = (0:size(tailCurv,3)-1)*(1/fps);
nTrls = length(time)/nFramesInTrl;

tA_5 = GetTailTangents(tailCurv,5);
curv = tA_5(end,:)';
tA_trl = reshape(curv,nFramesInTrl,nTrls);
time_trl = time(1:nFramesInTrl);


out = struct;
figure('Name','Pk info')
for trl = 1:nTrls
    cla
    plot(time_trl*1000,tA_trl(:,trl))
    box off
%     xlim([-inf (nFramesInTrl/fps)*1000])
    xlim ([-inf 1.5*1000]);
    ylim([-300 300])
    set(gca,'xtick',[100 500 1000 15000])
    title(['Click on 5 pts to get onset, 1st and 3rd undulation info, Trl # ' num2str(trl)])
    shg
    [x,y,button] = ginput(5);
    if all(button==1)
        out.onset(trl) = x(1)-(preStimPeriod)*1000;
        out.one.amp(trl) = y(2)-y(1);
        out.one.per(trl) = x(3)-x(1);
        out.three.amp(trl) = y(4)-y(3);
        out.three.per(trl) = x(5)-x(3);        
    else
        out.onset(trl) = nan;
        out.one.amp(trl) = nan;
        out.one.per(trl) = nan;
        out.three.amp(trl) = nan;
        out.three.per(trl) = nan;
    end
    
end
out.onset_mean = mean(out.onset(~isnan(out.onset)));
out.onset_std = std(out.onset(~isnan(out.onset)));
out.one.amp_mean = mean(abs(out.one.amp(~isnan(out.one.amp))));
out.one.amp_std  = std(abs(out.one.amp(~isnan(out.one.amp))));
out.one.per_mean = mean(out.one.per(~isnan(out.one.per)));
out.one.per_std =  std(out.one.per(~isnan(out.one.per)));
out.three.amp_mean = mean(abs(out.three.amp(~isnan(out.three.amp))));
out.three.amp_std = std(abs(out.three.amp(~isnan(out.three.amp))));
out.three.per_mean = mean(out.three.per(~isnan(out.three.per)));
out.three.per_std = std(out.three.per(~isnan(out.three.per)));

saveOrNot = input('Append pk data to procData? (y/n)','s');
if strcmpi(saveOrNot,'y')
    procData.Properties.Writable = true;
    procData.elicitedSwimInfo = out; 
end

varargout{1} = out;
varargout{2} = procData;
end

